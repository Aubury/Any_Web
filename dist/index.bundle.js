!function(n){function t(t){for(var r,a,s=t[0],l=t[1],c=t[2],u=0,p=[];u<s.length;u++)a=s[u],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(d&&d(t);p.length;)p.shift()();return i.push.apply(i,c||[]),e()}function e(){for(var n,t=0;t<i.length;t++){for(var e=i[t],r=!0,s=1;s<e.length;s++){var l=e[s];0!==o[l]&&(r=!1)}r&&(i.splice(t--,1),n=a(a.s=e[0]))}return n}var r={},o={2:0},i=[];function a(t){if(r[t])return r[t].exports;var e=r[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,a),e.l=!0,e.exports}a.m=n,a.c=r,a.d=function(n,t,e){a.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,t){if(1&t&&(n=a(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(a.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)a.d(e,r,function(t){return n[t]}.bind(null,r));return e},a.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(t,"a",t),t},a.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},a.p="";var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;i.push([14,0]),e()}([,function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=function(n,t){var e=n[1]||"",r=n[3];if(!r)return e;if(t&&"function"==typeof btoa){var o=(a=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(l," */")),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}var a,s,l;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&o[l[0]]||(e&&(l[2]?l[2]="".concat(e," and ").concat(l[2]):l[2]=e),t.push(l))}},t}},,,function(n,t,e){var r=e(5),o=e(6);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[n.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(n.i,o,i),o.locals?o.locals:{});n.exports=a},function(n,t,e){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}(),a={};function s(n,t,e){for(var r=0;r<t.length;r++){var o={css:t[r][1],media:t[r][2],sourceMap:t[r][3]};a[n][r]?a[n][r](o):a[n].push(f(o,e))}}function l(n){var t=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var o=e.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(n){t.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(t);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,d=(c=[],function(n,t){return c[n]=t,c.filter(Boolean).join("\n")});function u(n,t,e,r){var o=e?"":r.css;if(n.styleSheet)n.styleSheet.cssText=d(t,o);else{var i=document.createTextNode(o),a=n.childNodes;a[t]&&n.removeChild(a[t]),a.length?n.insertBefore(i,a[t]):n.appendChild(i)}}function p(n,t,e){var r=e.css,o=e.media,i=e.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var m=null,h=0;function f(n,t){var e,r,o;if(t.singleton){var i=h++;e=m||(m=l(t)),r=u.bind(null,e,i,!1),o=u.bind(null,e,i,!0)}else e=l(t),r=p.bind(null,e,t),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return r(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;r(n=t)}else o()}}n.exports=function(n,t,e){return(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o()),n=e.base?n+e.base:n,t=t||[],a[n]||(a[n]=[]),s(n,t,e),function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){a[n]||(a[n]=[]),s(n,t,e);for(var r=t.length;r<a[n].length;r++)a[n][r]();a[n].length=t.length,0===a[n].length&&delete a[n]}}}},function(n,t,e){var r=e(1),o=e(7),i=e(8);(t=r(!1)).i(o),t.i(i),t.push([n.i,"*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n.displayCenter{\r\n    display: flex;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    align-content: center;\r\n}\r\n.none{\r\n     display: none;\r\n }\r\n/*----------------------------------------------------------------------------------------------*/\r\n.menu-btn {\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: 0;\r\n    left: 0;\r\n    height: 70px;\r\n    width: 54px;\r\n    cursor: pointer;\r\n    background: url(https://iamturner.co.uk/codepen/menu-icon.png) no-repeat center;\r\n    background-size: 44px;\r\n}\r\n.menuOpen{\r\n    align-items: normal !important;\r\n    align-content: normal !important;\r\n}\r\n/*-----------------------------------------------------------------------------------------------*/\r\n@media screen and (max-width: 600px) {\r\n\r\n}\r\n\r\n",""]),n.exports=t},function(n,t,e){(t=e(1)(!1)).push([n.i,"/*-----------------------Slider---------------------------------------------------*/\r\nh1{\r\n    cursor: pointer;\r\n}\r\n.slid{\r\n    width: 100vw !important;\r\n    height: 100% !important;\r\n    position: absolute;\r\n    top: 0;\r\n    left:0;\r\n    transition: transform 0.4s;\r\n}\r\n\r\n.slid1{\r\n    background-color: #000068;\r\n    color: aliceblue;\r\n    transition-delay: 0.15s;\r\n}\r\n.slid2{\r\n    background-color: rgba(67, 61, 154, 1);\r\n    transition-delay: 0.1s;\r\n\r\n}\r\n.slid3{\r\n    background-color: #7df0c8;\r\n    transition-delay: 0.05s;\r\n\r\n}\r\n.slid4{\r\n    background-color: #000068;\r\n    color: aliceblue;\r\n    transition-delay: 0s;\r\n\r\n}\r\n.container {\r\n    height: 100vh !important;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n@keyframes slidDown{\r\n    0%{\r\n        top: 0;\r\n    }\r\n    40%{\r\n        top:40vh;\r\n    }\r\n    60%{\r\n        top:40vh;\r\n    }\r\n\r\n    100% {\r\n        top:100vh;\r\n    }\r\n}\r\n@keyframes slidUp{\r\n    from {\r\n        top: 100vh;\r\n    }\r\n    100% {\r\n        top:0;\r\n    }\r\n}\r\n.down{\r\n    top: 100vh;\r\n    animation: 2s ease-in-out slidDown;\r\n}\r\n.up{\r\n    top: 0;\r\n    animation: 1s ease-in-out slidUp;\r\n}\r\n.show {\r\n    z-index: 9;\r\n    position: fixed;\r\n\r\n}\r\n/*----------------------------Arrow------------------------------------------------------*/\r\n@keyframes moveButton{\r\n    from {\r\n        margin-top: 0;\r\n    }\r\n    5%{\r\n        margin-top: 10px;\r\n    }\r\n    10%{\r\n        margin-top: 0;\r\n    }\r\n    15%{\r\n        margin-top: 10px;\r\n    }\r\n    20%{\r\n        margin-top: 0;\r\n    }\r\n    100%{\r\n        margin-top: 0;\r\n    }\r\n\r\n}\r\n.divArrowUP{\r\n    position: absolute;\r\n    width: 4em;\r\n    height: 4em;\r\n    padding: 8px 2px 2px 2px !important;\r\n    top:.5em;\r\n    left: calc(100vw - 6em);\r\n    border-radius: 50%;\r\n    z-index: 99;\r\n    outline:none;\r\n}\r\n.divArrowUP img {\r\n    height: 90%;\r\n    width: 90%;\r\n    /*transform: rotate(90deg);*/\r\n\r\n}\r\n.divArrowDown{\r\n    position: absolute;\r\n    width: 4em;\r\n    height: 4em;\r\n    transform: rotate(-90deg);\r\n    padding: 8px 2px 2px 2px !important;\r\n    top: calc(100% - 13%);\r\n    left: calc(100vw - 6em);\r\n    border-radius: 50%;\r\n    z-index: 99;\r\n    outline:none;\r\n}\r\n.divArrowDown img {\r\n    height: 90%;\r\n    width: 90%;\r\n    transform: rotate(90deg);\r\n\r\n}\r\n.animButton{\r\n    margin-top: 0;\r\n    animation: moveButton 5s ease-in-out infinite;\r\n}\r\n\r\n",""]),n.exports=t},function(n,t,e){var r=e(1),o=e(9),i=e(10),a=e(11),s=e(12);t=r(!1);var l=o(i),c=o(a),d=o(s);t.push([n.i,"*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n.mainDiv{\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n.cat{\r\n    position: absolute;\r\n    height: 25%;\r\n    width: auto;\r\n    top: calc(100vh - 30%);\r\n    left: 5%;\r\n    border-bottom: 1px solid #000028;\r\n    line-height: 0;\r\n    padding-bottom: -10px;\r\n}\r\n.moon{\r\n    position: absolute;\r\n    height: auto;\r\n    max-width: 380px;\r\n    width: 35%;\r\n    top: 10px;\r\n    left: calc(100vw - 35%);\r\n    z-index: 99;\r\n}\r\n\r\n.star{\r\n    position: absolute;\r\n    width: auto;\r\n    transition: .5s;\r\n}\r\n.cloud1{\r\n    background-image: url("+l+");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    width: 40%;\r\n    height: 28%;\r\n    position: absolute;\r\n    top:10%;\r\n    left: calc(100vw - 45%);\r\n    transition: 1s;\r\n}\r\n.cloud2{\r\n    background-image: url("+c+");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    width: 40%;\r\n    height: 28%;\r\n    position: absolute;\r\n    top:20%;\r\n    left: calc(100vw - 40%);\r\n    z-index: 100;\r\n    transition: .5s;\r\n}\r\n.cloud3 {\r\n    background-image: url("+d+");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    width: 65%;\r\n    height: 25%;\r\n    position: absolute;\r\n    top: 25%;\r\n    left: calc(100vw - 100%);\r\n    z-index: 100;\r\n    transition: 1.5s;\r\n}",""]),n.exports=t},function(n,t,e){"use strict";n.exports=function(n,t){return t||(t={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},function(n,t,e){"use strict";e.r(t),t.default=e.p+"img/cloud_1.png"},function(n,t,e){"use strict";e.r(t),t.default=e.p+"img/cloud_2.png"},function(n,t,e){"use strict";e.r(t),t.default=e.p+"img/cloud_3.png"},,function(n,t,e){"use strict";e.r(t);e(0),e(4);var r=e.p+"img/downArrow.png",o=e.p+"img/upArrow.png",i=e.p+"img/cat.png",a=e.p+"img/moon.png",s=e.p+"img/star.png";const l={slide:document.createElement("div"),container:document.createElement("div"),Cat:new Image,Moon:new Image};function c(){l.container.querySelectorAll(".cloud").forEach(n=>{let t=n.style.left.slice(0,n.style.left.length-2);Number(t)>document.documentElement.clientWidth+10?(n.classList.add("none"),n.style.left="-"+(n.clientWidth+500)+"px"):(n.classList.remove("none"),n.style.left=n.offsetLeft+10+"px")})}function d(){let n=l.container.querySelectorAll(".star");Math.round(40*Math.random()+10),Math.round(50*Math.random()+10);for(let t=0;t<n.length;t++){let e=Math.round(40*Math.random()+10),r=Math.round(50*Math.random()+10);n[t].style.top=e+"%",n[t].style.left=r+"%"}}function u(n){let t=Math.round(40*Math.random()+10),e=Math.round(50*Math.random()+10);n.style.top=t+"%",n.style.left=e+"%"}!function(){const n=l.slide,t=l.container;n.classList.add("slid","slid1","show","displayCenter"),n.style.height=document.documentElement.clientHeight+"px",n.id="Main",t.classList.add("mainDiv"),n.appendChild(t),l.Moon.src=a,l.Moon.alt="Moon",l.Moon.classList.add("moon"),l.container.appendChild(l.Moon),l.Cat.src=i,l.Cat.alt="Cat",l.Cat.classList.add("cat"),l.container.appendChild(l.Cat),function(){let n=0;n=window.screen.width<1e3?2*Math.random()+5:10*Math.random()+10;for(let t=0;t<Math.round(n);t++){let n=new Image;n.src=s,n.alt="star",n.classList.add("star"),n.style.height=Math.round(55*Math.random()+5)+"px",u(n),l.container.appendChild(n)}}(),function(){let n=document.createElement("div"),t=document.createElement("div"),e=document.createElement("div");n.classList.add("cloud1","cloud"),l.container.appendChild(n),t.classList.add("cloud2","cloud"),l.container.appendChild(t),e.classList.add("cloud3","cloud"),l.container.appendChild(e)}(),setInterval(d,2e4),setInterval(c,0)}();var p=l.slide;const m=document.createElement("div");m.classList.add("slid","slid2","displayCenter"),m.style.height=document.documentElement.clientHeight+"px",m.innerHTML="<h1>О нас</h1>",m.id="About Us";var h=m;const f=document.createElement("div");f.classList.add("slid","slid3","displayCenter"),f.style.height=document.documentElement.clientHeight+"px",f.innerHTML="<h1>Наши работы</h1>",f.id="Our work";var v=f;const g=document.createElement("div");g.classList.add("slid","slid4","displayCenter"),g.style.height=document.documentElement.clientHeight+"px",g.innerHTML="<h1>Контакты</h1>",g.id="Contacts";var w=g;const b={container:document.querySelector(".container"),menuButton:document.querySelector(".menu-btn"),divArrowUp:document.querySelector(".divArrowUP"),divArrowDown:document.querySelector(".divArrowDown"),ArrowUp:new Image,ArrowDown:new Image,massSlides:[],index:null,initialX:null,initialY:null};function y(){const n=b.massSlides.length,t=b.index;1===t&&(b.divArrowUp.classList.remove("none"),b.divArrowDown.classList.add("none")),t===n-2&&(b.divArrowUp.classList.add("none"),b.divArrowDown.classList.remove("none"))}function x(n){return!(!n.classList.contains("show")||!n.nextElementSibling||n.nextElementSibling===b.divArrowUp||n.nextElementSibling===b.menuButton)&&(y(),n.classList.remove("show","up"),n.nextElementSibling.classList.remove("down"),n.nextElementSibling.classList.add("show","up"),!0)}function L(n){return!(!n.classList.contains("show")||!n.previousElementSibling||n.previousElementSibling===b.divArrowDown||n.previousElementSibling===b.menuButton)&&(y(),n.classList.remove("show","up"),n.classList.add("down"),setTimeout(()=>{n.previousElementSibling.classList.add("show")},2e3),!0)}function E(){let n=b.massSlides,t=n.length;b.ArrowUp.classList.remove("animButton");for(let e=0;e<t;e++)if(b.index=e,x(n[e]))return}function M(){let n=b.massSlides,t=n.length;for(let e=0;e<t;e++)if(b.index=e,L(n[e]))return}function A(n){b.initialX=n.touches[0].clientX,b.initialY=n.touches[0].clientY}function S(n){if(null===b.initialX)return;if(null===b.initialY)return;let t=n.touches[0].clientX,e=n.touches[0].clientY,r=b.initialX-t,o=b.initialY-e;Math.abs(r)>Math.abs(o)||(o>0?E():M()),b.initialX=null,b.initialY=null,n.preventDefault()}function C(n){"ArrowDown"===n.code&&M(),"ArrowUp"===n.code&&E()}function k(n){(n.deltaY||n.detail)>0?E():M()}function U(){document.addEventListener("keydown",C),window.addEventListener("wheel",k);const n=b.container;n.addEventListener("touchstart",A,!1),n.addEventListener("touchmove",S,!1)}function D(){document.removeEventListener("keydown",C),window.removeEventListener("wheel",k);const n=b.container;n.removeEventListener("touchstart",A),n.removeEventListener("touchmove",S)}function j(n){n.style.transform="none",n.style.borderRadius="0",n.classList.remove("menuOpen")}function O(n){let t=b.massSlides,e=this.id;for(let n=t.length-1;n>=0;n--)t[n].id!==e?(t[n].classList.contains("show")&&t[n].previousElementSibling&&t[n].previousElementSibling!==b.menuButton&&(t[n].classList.remove("show","up"),t[n].classList.add("down"),t[n].previousElementSibling.classList.add("show")),j(t[n])):j(t[n]);U()}b.menuButton.addEventListener("click",(function(){const n=b.massSlides,t=n.length;let e=0;n.forEach(n=>{x(n)});for(let r=0;r<t;r++)n[r].style.transform&&"none"!==n[r].style.transform?(n[r].style.transform="none",n[r].classList.remove("menuOpen"),n[r].style.borderRadius="0",b.divArrowDown.classList.remove("none"),U(),n[r].removeEventListener("click",O)):(r&&(e+=80,n[r].style.borderRadius="8px 8px 0 0",n[r].style.transform=`translateY(${e}px)`),n[r].classList.add("menuOpen"),n[r].addEventListener("click",O),b.divArrowDown.classList.add("none"),b.divArrowUp.classList.add("none"),D())})),function(){const n=b.container;n.appendChild(w),n.appendChild(v),n.appendChild(h),n.appendChild(p),b.massSlides=n.querySelectorAll(".slid")}(),U(),function(){const n=b.divArrowUp,t=b.divArrowDown;b.ArrowUp.src=o,b.ArrowUp.alt="arrowUp",n.appendChild(b.ArrowUp),b.ArrowDown.src=r,b.ArrowDown.alt="arrowDown",t.appendChild(b.ArrowDown)}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,