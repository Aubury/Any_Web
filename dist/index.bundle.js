!function(n){function e(e){for(var r,a,s=e[0],d=e[1],l=e[2],u=0,m=[];u<s.length;u++)a=s[u],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&m.push(o[a][0]),o[a]=0;for(r in d)Object.prototype.hasOwnProperty.call(d,r)&&(n[r]=d[r]);for(c&&c(e);m.length;)m.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var d=t[s];0!==o[d]&&(r=!1)}r&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var r={},o={2:0},i=[];function a(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=n,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)a.d(t,r,function(e){return n[e]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="";var s=window.webpackJsonp=window.webpackJsonp||[],d=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var c=d;i.push([21,0]),t()}([,function(n,e,t){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var o=(a=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(d," */")),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([o]).join("\n")}var a,s,d;return[t].join("\n")}(e,n);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&o[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),e.push(d))}},e}},function(n,e,t){"use strict";n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},,,function(n,e,t){var r=t(6),o=t(7);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[n.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(n.i,o,i),o.locals?o.locals:{});n.exports=a},function(n,e,t){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),a={};function s(n,e,t){for(var r=0;r<e.length;r++){var o={css:e[r][1],media:e[r][2],sourceMap:e[r][3]};a[n][r]?a[n][r](o):a[n].push(h(o,t))}}function d(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,c=(l=[],function(n,e){return l[n]=e,l.filter(Boolean).join("\n")});function u(n,e,t,r){var o=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=c(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function m(n,e,t){var r=t.css,o=t.media,i=t.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var p=null,f=0;function h(n,e){var t,r,o;if(e.singleton){var i=f++;t=p||(p=d(e)),r=u.bind(null,t,i,!1),o=u.bind(null,t,i,!0)}else t=d(e),r=m.bind(null,t,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else o()}}n.exports=function(n,e,t){return(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o()),n=t.base?n+t.base:n,e=e||[],a[n]||(a[n]=[]),s(n,e,t),function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){a[n]||(a[n]=[]),s(n,e,t);for(var r=e.length;r<a[n].length;r++)a[n][r]();a[n].length=e.length,0===a[n].length&&delete a[n]}}}},function(n,e,t){var r=t(1),o=t(8),i=t(9),a=t(12),s=t(16),d=t(19);(e=r(!1)).i(o),e.i(i),e.i(a),e.i(s),e.i(d),e.push([n.i,'*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n.displayCenter{\r\n    display: flex;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    align-content: center;\r\n}\r\n.none{\r\n     display: none;\r\n }\r\nh1{\r\n    cursor: pointer;\r\n    font-family: "Segoe Print Bold";\r\n    font-size: 2em;\r\n}\r\n/*----------------------------------------------------------------------------------------------*/\r\n.menu-btn {\r\n    position: absolute;\r\n    z-index: 99999;\r\n    top: 0;\r\n    left: 0;\r\n    height: 60px;\r\n    width: 60px;\r\n    cursor: pointer;\r\n    background: url(https://iamturner.co.uk/codepen/menu-icon.png) no-repeat center;\r\n    background-size: 70px;\r\n}\r\n.menuOpen{\r\n    align-items: normal !important;\r\n    align-content: normal !important;\r\n}\r\n/*-------------------------------------------------------------------------------------------------*/\r\n/*@media screen and (orientation:landscape) and (max-device-width: 900px) {*/\r\n/*    html{*/\r\n/*        -webkit-transform: rotate(-90deg);*/\r\n/*        -moz-transform: rotate(-90deg);*/\r\n/*        -ms-transform: rotate(-90deg);*/\r\n/*        -o-transform: rotate(-90deg);*/\r\n/*        transform: rotate(-90deg);*/\r\n/*        -webkit-transform-origin: left top;*/\r\n/*        -moz-transform-origin: left top;*/\r\n/*        -ms-transform-origin: left top;*/\r\n/*        -o-transform-origin: left top;*/\r\n/*        transform-origin: left top;*/\r\n/*        max-width: 400px; !*Разрешение экрана iPhone*!*/\r\n/*        position: absolute;*/\r\n/*        top: 100%;*/\r\n/*        left: 0*/\r\n/*    }*/\r\n/*}*/\r\n/*-----------------------------------------------------------------------------------------------*/\r\n@media screen and (max-width: 600px) {\r\n\r\n}\r\n\r\n',""]),n.exports=e},function(n,e,t){(e=t(1)(!1)).push([n.i,"html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\nmargin: 0;\r\npadding: 0;\r\nborder: 0;\r\nfont-size: 100%;\r\nfont: inherit;\r\nvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\ndisplay: block;\r\n}\r\nbody {\r\nline-height: 1;\r\n}\r\nol, ul {\r\nlist-style: none;\r\n}\r\nblockquote, q {\r\nquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\ncontent: '';\r\ncontent: none;\r\n}\r\ntable {\r\nborder-collapse: collapse;\r\nborder-spacing: 0;\r\n}\r\n",""]),n.exports=e},function(n,e,t){var r=t(1),o=t(2),i=t(10),a=t(11);e=r(!1);var s=o(i),d=o(a);e.push([n.i,":root{\r\n    --vh: 100%;\r\n}\r\n/*-----------------------Slider---------------------------------------------------*/\r\nh1{\r\n    cursor: pointer;\r\n}\r\n.slid{\r\n    width: 100vw !important;\r\n    /*height: 100vh;*/\r\n    height: calc(var(--vh, 1vh) * 100);\r\n    position: absolute;\r\n    top: 0;\r\n    left:0;\r\n    transition: transform 0.4s;\r\n\r\n}\r\n\r\n.slid1{\r\n    background: url("+s+") repeat-x bottom,\r\n                url("+d+") no-repeat bottom,\r\n                linear-gradient(to top, #af8230, #1a2b58, #121e3e 60%);\r\n    color: aliceblue;\r\n    transition-delay: 0.20s;\r\n    background-size:auto,100% auto, auto;\r\n}\r\n.slid2{\r\n    background-color: rgba(67, 61, 154, 1);\r\n    transition-delay: 0.15s;\r\n\r\n}\r\n.slid3{\r\n    background-color: #7df0c8;\r\n    transition-delay: 0.10s;\r\n\r\n}\r\n.slid4{\r\n    background-color: #f3ff86;\r\n    color: #36383f;\r\n    transition-delay: 0.05s;\r\n\r\n}\r\n.slid5{\r\n    background-color: #000068;\r\n    color: aliceblue;\r\n    transition-delay: 0s;\r\n\r\n}\r\n.container {\r\n    height: 100vh !important;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n@keyframes slidDown{\r\n    0%{\r\n        top: 0;\r\n    }\r\n    100% {\r\n        top:100vh;\r\n    }\r\n}\r\n@keyframes slidUp{\r\n    from {\r\n        top: 100vh;\r\n    }\r\n    100% {\r\n        top:0;\r\n    }\r\n}\r\n.down{\r\n    top: 100vh;\r\n    animation: 1.2s ease-in-out slidDown;\r\n}\r\n.up{\r\n    top: 0;\r\n    animation: 1s ease-in-out slidUp;\r\n}\r\n.show {\r\n    z-index: 9;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n}\r\n/*----------------------------Arrow------------------------------------------------------*/\r\n@keyframes moveButton{\r\n    from {\r\n        margin-top: 0;\r\n    }\r\n    5%{\r\n        margin-top: 10px;\r\n    }\r\n    10%{\r\n        margin-top: 0;\r\n    }\r\n    15%{\r\n        margin-top: 10px;\r\n    }\r\n    20%{\r\n        margin-top: 0;\r\n    }\r\n    100%{\r\n        margin-top: 0;\r\n    }\r\n\r\n}\r\n.divArrowUP{\r\n    position: absolute;\r\n    width: 4em;\r\n    height: 4em;\r\n    padding: 8px 2px 2px 2px !important;\r\n    top:.5em;\r\n    left: calc(100vw - 6em);\r\n    border-radius: 50%;\r\n    z-index: 99;\r\n    outline:none;\r\n}\r\n.divArrowUP img {\r\n    height: 90%;\r\n    width: 90%;\r\n    /*transform: rotate(90deg);*/\r\n\r\n}\r\n.divArrowDown{\r\n    position: absolute;\r\n    width: 4em;\r\n    height: 4em;\r\n    transform: rotate(-90deg);\r\n    padding: 8px 2px 2px 2px !important;\r\n    top: calc(100% - 13%);\r\n    left: calc(100vw - 6em);\r\n    border-radius: 50%;\r\n    z-index: 99;\r\n    outline:none;\r\n}\r\n.divArrowDown img {\r\n    height: 90%;\r\n    width: 90%;\r\n    transform: rotate(90deg);\r\n\r\n}\r\n.animButton{\r\n    margin-top: 0;\r\n    animation: moveButton 5s ease-in-out infinite;\r\n}\r\n\r\n/*---------------------------------------------------------------*/\r\n@media screen and (max-width: 1200px){\r\n    .slid1{\r\n        background-size: auto,140% 30%, auto;\r\n        background-position: bottom, 100% bottom;\r\n    }\r\n}\r\n/*--------------------------------------------------------------*/\r\n@media screen and (max-width: 900px) and (orientation: landscape) {\r\n    .divArrowDown{\r\n        top: calc(100% - 20%);\r\n    }\r\n    .slid1{\r\n        background-size: auto 15%,100% 35%, auto;\r\n        background-position: bottom, 100% bottom;\r\n    }\r\n}\r\n/*---------------------------------------------------------------*/\r\n@media screen and (max-width: 450px){\r\n    .slid1{\r\n        background-size: auto 15%,190% 25%, auto;\r\n        background-position: bottom, 100% bottom;\r\n    }\r\n}\r\n\r\n",""]),n.exports=e},function(n,e,t){"use strict";t.r(e),e.default=t.p+"69d5e53d18f7ba95d3052ea9ac3157b5.png"},function(n,e,t){"use strict";t.r(e),e.default=t.p+"3a28c568bcf5c44b1fd19b67b6518c42.png"},function(n,e,t){var r=t(1),o=t(2),i=t(13),a=t(14),s=t(15);e=r(!1);var d=o(i),l=o(a),c=o(s);e.push([n.i,'*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.h1{\n    position: absolute;\n    top:0;\n    width: 100%;\n    font-family: "Hanging Letters";\n    font-size: 4em;\n    z-index: 999;\n    text-align: center;\n    color: #67c2fb;\n    line-height: 100px;\n    /*text-shadow: 2px 4px 3px rgba(142, 142, 142, 0.48);*/\n}\n.topBlock{\n    height: 50%;\n    width: 100%;\n}\n.bottomBlock{\n    height: 50%;\n    width: 100%;\n}\n.mainDiv{\n    height: 100%;\n    width: 80%;\n    position: relative;\n    left: calc((100% - 80%)/2);\n    display: flex;\n    flex-direction: column;\n}\n.blockCat{\n    width: 50%;\n    height: 50%;\n    position: absolute;\n    top: 50%;\n    left: 10%;\n    display: flex;\n    flex-direction: row;\n}\n.cat{\n    width: 40%;\n    display: flex;\n    align-items: flex-end;\n}\n.cat img{\n    height: 50%;\n    width: auto;\n    margin-bottom: 20px;\n\n}\n.blockMoon{\n    width: 30%;\n    height: auto;\n    max-height: calc(100% / 3);\n    position: absolute;\n    top: 10px;\n    left: calc(100% - 35%);\n    z-index: 99;\n    display: flex;\n    justify-content: flex-end;\n}\n.blockMoon img{\n      width: 90%;\n      height: 90%;\n      max-width: 270px;\n      max-height: 270px;\n      text-align: left;\n}\n.comment{\n    width: 60%;\n}\n.comment img{\n    height: 50%;\n    width: auto;\n}\n.grass{\n    width: auto;\n    height: 15%;\n    z-index: 99;\n    position: absolute;\n    top: calc(100% - 15%);\n}\n.star{\n    position: absolute;\n    width: auto;\n    transition: .5s;\n}\n.cloud1{\n    background-image: url('+d+");\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 40%;\n    height: 28%;\n    position: absolute;\n    top:10%;\n    left: calc(100vw - 45%);\n    transition: 1s;\n    z-index: 98;\n}\n.cloud2{\n    background-image: url("+l+");\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 40%;\n    height: 28%;\n    position: absolute;\n    top:20%;\n    left: calc(100vw - 40%);\n    z-index: 100;\n    transition: .5s;\n}\n.cloud3 {\n    background-image: url("+c+");\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 65%;\n    height: 25%;\n    position: absolute;\n    top: 25%;\n    left: calc(100vw - 100%);\n    z-index: 101;\n    transition: 1.5s;\n}\n/*-------------------------------------------------------------*/\n@media screen and (max-width: 800px) and (orientation: landscape){\n    .mainDiv{\n        width: 70%;\n        left: calc((100% - 70%)/2);\n    }\n    .h1{\n        font-size: 2.5em !important;\n        line-height: 60px !important;\n    }\n    .blockMoon img {\n        width: 50%;\n        height: 50%;\n    }\n}\n/*--------------------------------------------------------------*/\n@media screen and (max-width: 1050px) {\n    .mainDiv{\n        width: 90% !important;\n        left: calc((100% - 90%)/2);\n    }\n}\n/*--------------------------------------------------------------*/\n@media screen and (max-width: 900px) {\n    .h1{\n        font-size: 3em;\n        line-height: 80px;\n    }\n    .blockMoon img{\n        max-width: 150px;\n        max-height: 150px;\n\n    }\n}\n/*--------------------------------------------------------------*/\n@media screen and (max-width: 800px) {\n    .h1{\n        font-size: 3em;\n        line-height: 80px;\n    }\n}\n/*-------------------------------------------------------------*/\n@media screen and (max-width: 600px) {\n    .h1{\n        font-size: 2em;\n        line-height: 50px;\n    }\n    .mainDiv{\n        width: 90%;\n        left: calc((100% - 90%)/2);\n\n    }\n    .blockCat{\n        width: 80%;\n        left: 1%;\n    }\n    .blockMoon{\n        width: 50%;\n    }\n    .cat img {\n        height: 40%;\n        /*margin-bottom: 20px;*/\n    }\n    .comment img {\n        height: 40%;\n    }\n    .grass{\n        height: 10%;\n        top: calc(100% - 10%);\n    }\n\n}",""]),n.exports=e},function(n,e,t){"use strict";t.r(e),e.default=t.p+"dd586c081e53c8de79af379c4b891ea8.png"},function(n,e,t){"use strict";t.r(e),e.default=t.p+"ef4e211b62f1ca3a68ed5ab3f2dd3fb9.png"},function(n,e,t){"use strict";t.r(e),e.default=t.p+"0bec4d6ec25c83f96efaf0c8ba03247f.png"},function(n,e,t){var r=t(1),o=t(2),i=t(17),a=t(18);e=r(!1);var s=o(i),d=o(a);e.push([n.i,"@font-face {\r\n font-family: 'Hanging Letters';\r\n    src: url("+s+');\r\n}\r\n@font-face {\r\n    font-family: "Segoe Print Bold";\r\n    src: url('+d+");\r\n}\r\n",""]),n.exports=e},function(n,e,t){"use strict";t.r(e),e.default=t.p+"1da2ac0ce2475f77ead14788891e054a.ttf"},function(n,e,t){"use strict";t.r(e),e.default=t.p+"4ed8298204138b08c1e73d2d9a6cba9a.ttf"},function(n,e,t){(e=t(1)(!1)).push([n.i,"*{\r\n    box-sizing: border-box;\r\n\r\n}\r\n#modal {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    position: absolute;\r\n    font-family: 'Segoe Print Bold';\r\n    top: -110%;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 9999;\r\n    background: rgba(0,0,0,0.7);\r\n}\r\n.modalActive{\r\n    top: 0 !important;\r\n    position: fixed !important;\r\n    transition: all 0.4s linear;\r\n    /*-moz-transition: all 0.4s ease-in-out;*/\r\n    /*-webkit-transition: all 0.4s ease-in-out;*/\r\n}\r\n\r\n.modalForm{\r\n    background: #fff;\r\n    width: 35em;\r\n    border-radius: 5px;\r\n    font-size: 1.3em;\r\n    box-shadow: 0 3px 7px rgba(0,0,0,.25);\r\n    /*-moz-box-shadow: 0 3px 7px rgba(0,0,0,.25);*/\r\n    /*-webkit-box-shadow: 0 3px 7px rgba(0,0,0,.25);*/\r\n    text-align: center;\r\n}\r\n.modalForm main{\r\n    margin: 20px auto;\r\n}\r\n.modalForm main p{\r\n    margin: 20px auto;\r\n}\r\n.modalForm header, .modalForm footer {\r\n    background: #c5c5c5;\r\n    border-bottom: 1px solid #939393;\r\n    border-radius: 5px 5px 0 0;\r\n    /*-moz-border-radius: 5px 5px 0 0;*/\r\n    /*-webkit-border-radius: 5px 5px 0 0;*/\r\n}\r\n.modalForm footer {\r\n    border-top: 1px solid #939393;\r\n    border-radius: 0 0 5px 5px;\r\n    /*-moz-border-radius: 0 0 5px 5px;*/\r\n    /*-webkit-border-radius: 0 0 5px 5px;*/\r\n}\r\n.modalForm div, .modalForm header, .modalForm footer {\r\n    padding: 15px;\r\n    z-index: 200;\r\n}\r\n.modalForm h2 {\r\n    font-size: 2em;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: black;\r\n}\r\n.modalForm .btn {\r\n    cursor: pointer;\r\n    color: #000068;\r\n}\r\n.contacts{\r\ncursor: pointer;\r\n}\r\n",""]),n.exports=e},,function(n,e,t){"use strict";t.r(e);t(0),t(5);var r=t.p+"31fc534c140648af7b7841232bae2342.png",o=t.p+"0a29d0e754fe3ac9061df66836e60ab4.png",i=t.p+"f757c0dd1166c11b5bc230542160ae71.png",a=t.p+"09d0a0887c349f20d02a7cea1e29e8ab.png",s=t.p+"80c68e969c88d219cdd2bcdc5ffcd8d6.png",d=t.p+"fbd225ee8ac38d426c6687bbcbaaa786.png",l=t.p+"68c882db6f82444eb8a20965ae42a216.png";const c={slide:document.createElement("div"),main:document.createElement("div"),topBlock:document.createElement("div"),bottomBlock:document.createElement("div"),blockCat:document.createElement("div"),blockMoon:document.createElement("div"),cat:document.createElement("div"),comm:document.createElement("div"),Cat:new Image,Moon:new Image,Comment:new Image,Snail:new Image};function u(){c.Moon.src=a,c.Moon.alt="Moon",c.Moon.classList.add("moon"),c.blockMoon.appendChild(c.Moon),c.Cat.src=i,c.Cat.alt="Cat",c.cat.appendChild(c.Cat),c.Comment.src=d,c.Comment.alt="Comment",c.comm.appendChild(c.Comment),c.Snail.src=l,c.Snail.alt="Snail",c.Snail.classList.add("grass"),c.main.appendChild(c.Snail)}function m(){c.main.querySelectorAll(".cloud").forEach(n=>{let e=n.style.left.slice(0,n.style.left.length-2);Number(e)>document.documentElement.clientWidth+10?(n.classList.add("none"),n.style.left="-"+(n.clientWidth+500)+"px"):(n.classList.remove("none"),n.style.left=n.offsetLeft+10+"px")})}function p(){let n=document.querySelector(".moon"),e=n.style.transform.replace(/rotate\(/,"").replace(/deg\)/,"");e=Number(e)+.5,""===n.style.transform&&(e=0),n.style.transform=`rotate(${e}deg)`}function f(){let n=c.main.querySelectorAll(".star");for(let e=0;e<n.length;e++){let t=Math.round(35*Math.random()+5),r=Math.round(99*Math.random()+1);n[e].style.top=t+"%",n[e].style.left=r+"%"}}function h(n){let e=Math.round(35*Math.random()+5),t=Math.round(99*Math.random()+1);n.style.top=e+"%",n.style.left=t+"%"}function g(){let n=40;return window.screen.width<1e3&&(n=20),Math.round(Math.random()*(n-5)+5)}!function(){const n=c.slide,e=c.main,t=c.topBlock,r=c.bottomBlock,o=c.blockCat,i=c.blockMoon,a=document.createElement("h1"),d=c.cat,l=c.comm;n.classList.add("slid","slid1","show"),n.style.height=document.documentElement.clientHeight+"px",n.id="Main",e.classList.add("mainDiv"),n.appendChild(e),t.classList.add("topBlock"),e.appendChild(t),r.classList.add("bottomBlock"),e.appendChild(r),a.classList.add("h1"),a.innerHTML="ANY WEB",e.appendChild(a),o.classList.add("blockCat"),r.appendChild(o),d.classList.add("cat"),l.classList.add("comment"),o.appendChild(d),o.appendChild(l),i.classList.add("blockMoon"),t.appendChild(i),u(),function(){let n=0;n=window.screen.width<1e3?5*Math.random()+5:10*Math.random()+10;for(let e=0;e<Math.round(n);e++){let n=new Image;n.src=s,n.alt="star",n.classList.add("star"),n.style.height=g()+"px",h(n),c.main.appendChild(n)}}(),function(){let n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div");n.classList.add("cloud1","cloud"),c.main.appendChild(n),e.classList.add("cloud2","cloud"),c.main.appendChild(e),t.classList.add("cloud3","cloud"),c.main.appendChild(t)}(),setInterval(f,2e4),setInterval(m,0),setInterval(p,1e4)}();var b=c.slide;const w=document.createElement("div");w.classList.add("slid","slid2","displayCenter"),w.style.height=document.documentElement.clientHeight+"px",w.innerHTML="<h1>Мы предлагаем</h1>",w.id="We suppose";var v=w;const x=document.createElement("div");x.classList.add("slid","slid3","displayCenter"),x.style.height=document.documentElement.clientHeight+"px",x.innerHTML="<h1>Наши работы</h1>",x.id="Our work";var y=x;const k=document.createElement("div");k.classList.add("slid","slid4","displayCenter"),k.style.height=document.documentElement.clientHeight+"px",k.innerHTML='<h1 class="contacts">PSD шаблоны</h1>',k.id="Templates";var L=k;const C=document.createElement("div");C.classList.add("slid","slid5","displayCenter"),C.style.height=document.documentElement.clientHeight+"px",C.innerHTML='<h1 class="contacts">Контакты</h1>',C.id="Contacts";var _=C;const M={container:document.querySelector(".container"),menuButton:document.querySelector(".menu-btn"),divArrowUp:document.querySelector(".divArrowUP"),divArrowDown:document.querySelector(".divArrowDown"),modalWindow:null,openModal:document.querySelector(".contacts"),closeModal:null,contacts:document.querySelector("#Contacts"),ArrowUp:new Image,ArrowDown:new Image,massSlides:[],index:null,initialX:null,initialY:null};function E(){const n=M.index;return 2===n&&M.divArrowUp.classList.contains("none")?(M.divArrowUp.classList.remove("none"),void M.divArrowDown.classList.add("none")):3===n&&M.divArrowDown.classList.contains("none")?(M.divArrowUp.classList.add("none"),void M.divArrowDown.classList.remove("none")):void 0}function S(n){return!(!n.classList.contains("show")||!n.nextElementSibling||n.nextElementSibling===M.divArrowUp||"Contacts"==n.nextElementSibling.id)&&(E(),n.classList.remove("show","up"),n.nextElementSibling.classList.remove("down"),n.nextElementSibling.classList.add("show","up"),!0)}function A(n){return!(!n.classList.contains("show")||!n.previousElementSibling||n.previousElementSibling===M.divArrowDown||"Contacts"==n.previousElementSibling.id)&&(E(),n.classList.remove("show","up"),n.classList.add("down"),setTimeout(()=>{n.previousElementSibling.classList.add("show")},1e3),!0)}function z(){let n=M.massSlides,e=n.length;M.ArrowUp.classList.remove("animButton");for(let t=1;t<e-1;t++)if(M.index=t,S(n[t]))return}function D(){let n=M.massSlides,e=n.length;for(let t=1;t<e;t++)if(M.index=t,A(n[t]))return}function j(n){M.initialX=n.touches[0].clientX,M.initialY=n.touches[0].clientY}function U(n){if(null===M.initialX)return;if(null===M.initialY)return;let e=n.touches[0].clientX,t=n.touches[0].clientY,r=M.initialX-e,o=M.initialY-t;Math.abs(r)>Math.abs(o)||(o>0?z():D()),M.initialX=null,M.initialY=null,n.preventDefault()}function B(n){"ArrowDown"===n.code&&D(),"ArrowUp"===n.code&&z()}function q(n){(n.deltaY||n.detail||n.wheelDelta)>0?D():(window.onmousewheel=null,z(),setTimeout(()=>window.onmousewheel=q,500))}function T(){document.addEventListener("keydown",B),window.onmousewheel=q;const n=M.container;n.addEventListener("touchstart",j,!1),n.addEventListener("touchmove",U,!1)}function O(){document.removeEventListener("keydown",B),window.removeEventListener("wheel",q);const n=M.container;n.removeEventListener("touchstart",j),n.removeEventListener("touchmove",U)}function H(n){n.style.transform="none",n.style.borderRadius="0",n.classList.remove("menuOpen")}function P(n){let e=M.massSlides,t=this.id,r=!1;for(let n=e.length-1;n>0;n--)if("Contacts"===t)F(e[n]),I();else{if(e[n].id===t){M.index=n,r=!0,setTimeout(()=>{e[n].classList.add("show")},1e3),E(),H(e[n]);continue}r?(e[n].classList.remove("show"),e[n].classList.add("up")):(e[n].classList.remove("show","up"),e[n].classList.add("down")),H(e[n])}T()}function F(n){n.style.transform="none",n.classList.remove("menuOpen"),n.style.borderRadius="0",M.divArrowDown.classList.remove("none"),n.removeEventListener("click",P)}function I(){const n=M.modalWindow,e=M.closeModal;n.classList.add("modalActive"),O(),e.addEventListener("click",()=>{n.classList.remove("modalActive"),T()})}M.menuButton.addEventListener("click",(function(){const n=M.massSlides,e=n.length;let t=0;n.forEach(n=>{S(n)});for(let r=0;r<e;r++)n[r].style.transform&&"none"!==n[r].style.transform?(F(n[r]),T()):(r&&(t+=80,n[r].style.borderRadius="8px 8px 0 0",n[r].style.transform=`translateY(${t}px)`),n[r].classList.add("menuOpen"),n[r].addEventListener("click",P),M.divArrowDown.classList.add("none"),M.divArrowUp.classList.add("none"),O())})),window.addEventListener("resize",()=>{let n=.01*window.innerHeight;document.documentElement.style.setProperty("--vh",`${n}px`)}),function(){const n=M.container;n.appendChild(_),n.appendChild(L),n.appendChild(y),n.appendChild(v),n.appendChild(b),M.massSlides=n.querySelectorAll(".slid")}(),function(){const n=document.createElement("div");n.setAttribute("id","modal"),n.innerHTML='<div class="modalForm">\n                        <header>\n                            <h2>Свяжитесь с нами</h2>\n                        </header>\n                        <main>\n                            <p>Skype: _________________</p>\n                            <p>Vibe: __________________</p>\n                            <p>Telegram: ______________</p>\n                        </main>\n                        <footer>\n                            <a class="btn">Закрыть</a>\n                        </footer>\n                   </div>',M.modalWindow=n,document.body.insertBefore(n,M.container.nextElementSibling),M.closeModal=document.querySelector(".btn")}(),function(){const n=M.divArrowUp,e=M.divArrowDown;M.ArrowUp.src=o,M.ArrowUp.alt="arrowUp",n.appendChild(M.ArrowUp),M.ArrowDown.src=r,M.ArrowDown.alt="arrowDown",e.appendChild(M.ArrowDown)}(),T()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,